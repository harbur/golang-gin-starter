// Code generated by go-swagger; DO NOT EDIT.

package movies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetMoviesHandlerFunc turns a function with the right signature into a get movies handler
type GetMoviesHandlerFunc func(GetMoviesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetMoviesHandlerFunc) Handle(params GetMoviesParams) middleware.Responder {
	return fn(params)
}

// GetMoviesHandler interface for that can handle valid get movies params
type GetMoviesHandler interface {
	Handle(GetMoviesParams) middleware.Responder
}

// NewGetMovies creates a new http.Handler for the get movies operation
func NewGetMovies(ctx *middleware.Context, handler GetMoviesHandler) *GetMovies {
	return &GetMovies{Context: ctx, Handler: handler}
}

/*GetMovies swagger:route GET /api/movies movies getMovies

GetMovies get movies API

*/
type GetMovies struct {
	Context *middleware.Context
	Handler GetMoviesHandler
}

func (o *GetMovies) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetMoviesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
